// Code generated by protoc-gen-go.
// source: coproto.proto
// DO NOT EDIT!

package coproto

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Change struct {
	TargetEntity     *uint64 `protobuf:"varint,1,req,name=targetEntity" json:"targetEntity,omitempty"`
	Key              *string `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Change) Reset()         { *m = Change{} }
func (m *Change) String() string { return proto.CompactTextString(m) }
func (*Change) ProtoMessage()    {}

func (m *Change) GetTargetEntity() uint64 {
	if m != nil && m.TargetEntity != nil {
		return *m.TargetEntity
	}
	return 0
}

func (m *Change) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Change) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type ChangeRequest struct {
	RequestEntity    *uint64   `protobuf:"varint,1,req,name=requestEntity" json:"requestEntity,omitempty"`
	RequestNode      *uint32   `protobuf:"varint,2,req,name=requestNode" json:"requestNode,omitempty"`
	RequestId        *uint64   `protobuf:"varint,3,req,name=requestId" json:"requestId,omitempty"`
	Changeset        []*Change `protobuf:"bytes,4,rep,name=changeset" json:"changeset,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ChangeRequest) Reset()         { *m = ChangeRequest{} }
func (m *ChangeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeRequest) ProtoMessage()    {}

func (m *ChangeRequest) GetRequestEntity() uint64 {
	if m != nil && m.RequestEntity != nil {
		return *m.RequestEntity
	}
	return 0
}

func (m *ChangeRequest) GetRequestNode() uint32 {
	if m != nil && m.RequestNode != nil {
		return *m.RequestNode
	}
	return 0
}

func (m *ChangeRequest) GetRequestId() uint64 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *ChangeRequest) GetChangeset() []*Change {
	if m != nil {
		return m.Changeset
	}
	return nil
}

type Instruction struct {
	Slot             *uint64        `protobuf:"varint,1,req,name=slot" json:"slot,omitempty"`
	Proposal         *uint64        `protobuf:"varint,2,req,name=proposal" json:"proposal,omitempty"`
	Leader           *uint32        `protobuf:"varint,3,req,name=leader" json:"leader,omitempty"`
	Request          *ChangeRequest `protobuf:"bytes,4,req,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Instruction) Reset()         { *m = Instruction{} }
func (m *Instruction) String() string { return proto.CompactTextString(m) }
func (*Instruction) ProtoMessage()    {}

func (m *Instruction) GetSlot() uint64 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *Instruction) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Instruction) GetLeader() uint32 {
	if m != nil && m.Leader != nil {
		return *m.Leader
	}
	return 0
}

func (m *Instruction) GetRequest() *ChangeRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type Prepare struct {
	Proposal         *uint64 `protobuf:"varint,1,req,name=proposal" json:"proposal,omitempty"`
	FirstUnapplied   *uint64 `protobuf:"varint,2,req,name=firstUnapplied" json:"firstUnapplied,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Prepare) Reset()         { *m = Prepare{} }
func (m *Prepare) String() string { return proto.CompactTextString(m) }
func (*Prepare) ProtoMessage()    {}

func (m *Prepare) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Prepare) GetFirstUnapplied() uint64 {
	if m != nil && m.FirstUnapplied != nil {
		return *m.FirstUnapplied
	}
	return 0
}

type Promise struct {
	Proposal         *uint64        `protobuf:"varint,1,req,name=proposal" json:"proposal,omitempty"`
	Leader           *uint32        `protobuf:"varint,2,req,name=leader" json:"leader,omitempty"`
	PrevProposal     *uint64        `protobuf:"varint,3,req,name=prevProposal" json:"prevProposal,omitempty"`
	PrevLeader       *uint32        `protobuf:"varint,4,req,name=prevLeader" json:"prevLeader,omitempty"`
	Accepted         []*Instruction `protobuf:"bytes,5,rep,name=accepted" json:"accepted,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Promise) Reset()         { *m = Promise{} }
func (m *Promise) String() string { return proto.CompactTextString(m) }
func (*Promise) ProtoMessage()    {}

func (m *Promise) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Promise) GetLeader() uint32 {
	if m != nil && m.Leader != nil {
		return *m.Leader
	}
	return 0
}

func (m *Promise) GetPrevProposal() uint64 {
	if m != nil && m.PrevProposal != nil {
		return *m.PrevProposal
	}
	return 0
}

func (m *Promise) GetPrevLeader() uint32 {
	if m != nil && m.PrevLeader != nil {
		return *m.PrevLeader
	}
	return 0
}

func (m *Promise) GetAccepted() []*Instruction {
	if m != nil {
		return m.Accepted
	}
	return nil
}

type Accept struct {
	Proposal         *uint64      `protobuf:"varint,1,req,name=proposal" json:"proposal,omitempty"`
	Instruction      *Instruction `protobuf:"bytes,2,req,name=instruction" json:"instruction,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Accept) Reset()         { *m = Accept{} }
func (m *Accept) String() string { return proto.CompactTextString(m) }
func (*Accept) ProtoMessage()    {}

func (m *Accept) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Accept) GetInstruction() *Instruction {
	if m != nil {
		return m.Instruction
	}
	return nil
}

type Accepted struct {
	Proposal         *uint64      `protobuf:"varint,1,req,name=proposal" json:"proposal,omitempty"`
	Leader           *uint32      `protobuf:"varint,2,req,name=leader" json:"leader,omitempty"`
	Instruction      *Instruction `protobuf:"bytes,3,req,name=instruction" json:"instruction,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Accepted) Reset()         { *m = Accepted{} }
func (m *Accepted) String() string { return proto.CompactTextString(m) }
func (*Accepted) ProtoMessage()    {}

func (m *Accepted) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Accepted) GetLeader() uint32 {
	if m != nil && m.Leader != nil {
		return *m.Leader
	}
	return 0
}

func (m *Accepted) GetInstruction() *Instruction {
	if m != nil {
		return m.Instruction
	}
	return nil
}

type Nack struct {
	Proposal         *uint64 `protobuf:"varint,1,req,name=proposal" json:"proposal,omitempty"`
	Leader           *uint32 `protobuf:"varint,2,req,name=leader" json:"leader,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Nack) Reset()         { *m = Nack{} }
func (m *Nack) String() string { return proto.CompactTextString(m) }
func (*Nack) ProtoMessage()    {}

func (m *Nack) GetProposal() uint64 {
	if m != nil && m.Proposal != nil {
		return *m.Proposal
	}
	return 0
}

func (m *Nack) GetLeader() uint32 {
	if m != nil && m.Leader != nil {
		return *m.Leader
	}
	return 0
}

func init() {
}
